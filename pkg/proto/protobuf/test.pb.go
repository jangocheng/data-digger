// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: test.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TestMessage1 struct {
	Key1                 string   `protobuf:"bytes,1,opt,name=key1,proto3" json:"key1,omitempty"`
	Key2                 int32    `protobuf:"varint,2,opt,name=key2,proto3" json:"key2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMessage1) Reset()         { *m = TestMessage1{} }
func (m *TestMessage1) String() string { return proto.CompactTextString(m) }
func (*TestMessage1) ProtoMessage()    {}
func (*TestMessage1) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}
func (m *TestMessage1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMessage1.Unmarshal(m, b)
}
func (m *TestMessage1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMessage1.Marshal(b, m, deterministic)
}
func (m *TestMessage1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMessage1.Merge(m, src)
}
func (m *TestMessage1) XXX_Size() int {
	return xxx_messageInfo_TestMessage1.Size(m)
}
func (m *TestMessage1) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMessage1.DiscardUnknown(m)
}

var xxx_messageInfo_TestMessage1 proto.InternalMessageInfo

func (m *TestMessage1) GetKey1() string {
	if m != nil {
		return m.Key1
	}
	return ""
}

func (m *TestMessage1) GetKey2() int32 {
	if m != nil {
		return m.Key2
	}
	return 0
}

type TestMessage2 struct {
	Key1                 string   `protobuf:"bytes,1,opt,name=key1,proto3" json:"key1,omitempty"`
	Key2                 int32    `protobuf:"varint,2,opt,name=key2,proto3" json:"key2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMessage2) Reset()         { *m = TestMessage2{} }
func (m *TestMessage2) String() string { return proto.CompactTextString(m) }
func (*TestMessage2) ProtoMessage()    {}
func (*TestMessage2) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}
func (m *TestMessage2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMessage2.Unmarshal(m, b)
}
func (m *TestMessage2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMessage2.Marshal(b, m, deterministic)
}
func (m *TestMessage2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMessage2.Merge(m, src)
}
func (m *TestMessage2) XXX_Size() int {
	return xxx_messageInfo_TestMessage2.Size(m)
}
func (m *TestMessage2) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMessage2.DiscardUnknown(m)
}

var xxx_messageInfo_TestMessage2 proto.InternalMessageInfo

func (m *TestMessage2) GetKey1() string {
	if m != nil {
		return m.Key1
	}
	return ""
}

func (m *TestMessage2) GetKey2() int32 {
	if m != nil {
		return m.Key2
	}
	return 0
}

func init() {
	proto.RegisterType((*TestMessage1)(nil), "TestMessage1")
	proto.RegisterType((*TestMessage2)(nil), "TestMessage2")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x32, 0xe3, 0xe2, 0x09, 0x49, 0x2d, 0x2e, 0xf1, 0x4d,
	0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x35, 0x14, 0x12, 0xe2, 0x62, 0xc9, 0x4e, 0xad, 0x34, 0x94, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0xa1, 0x62, 0x46, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xac,
	0x60, 0x31, 0x23, 0x34, 0x7d, 0x46, 0xc4, 0xea, 0x73, 0x32, 0x8f, 0x32, 0x4d, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x2f, 0x4e, 0x4d, 0xcf, 0x4d, 0xcd, 0x2b, 0xc9, 0xcc,
	0xd7, 0xcf, 0x4e, 0x4c, 0xcb, 0x4e, 0xd4, 0x4d, 0xc9, 0x4c, 0x4f, 0x4f, 0x2d, 0xd2, 0x2f, 0xc8,
	0x4e, 0xd7, 0x87, 0x31, 0x41, 0xae, 0x4c, 0x2a, 0x4d, 0x4b, 0x62, 0x03, 0xb3, 0x8c, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xf7, 0xde, 0x24, 0xc6, 0xbd, 0x00, 0x00, 0x00,
}
